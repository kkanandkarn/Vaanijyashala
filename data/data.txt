 await AsyncStorage.setItem('login', 'true')
          await AsyncStorage.setItem('username', formData.name)
           await AsyncStorage.setItem('selectedImage', uri);



           /**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 */
import 'react-native-gesture-handler';
import {NavigationContainer} from '@react-navigation/native';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import React, {useEffect} from 'react';

import SplashScreen from 'react-native-splash-screen';

import HomeScreen from './src/screens/HomeScreen';
import SignUp from './src/screens/SignUp';

import OtpScreen from './src/screens/OtpScreen';
import GeneratePassword from './src/screens/GeneratePassword';
import {Provider} from 'react-redux';
import store from './src/store';
import {ToastComponent} from './components/ToastComponent';
import LogIn from './src/screens/LogIn';
import ForgetPassword from './src/screens/ForgetPassword';
import RegisterSuccessfull from './src/screens/RegisterSuccessfull';
import ProfileForm from './src/screens/ProfileForm';
import MerchantProfileForm from './src/screens/MerchantProfileForm';
import Dashboard from './src/screens/Dashboard';
import SellerDashboard from './src/screens/MerchantScreens/SellerDashboard';
import BottomStack from './src/screens/BottomStack/BottomStack';

const Stack = createNativeStackNavigator();

function App(): React.JSX.Element {
  useEffect(() => {
    const timer = setTimeout(() => {
      SplashScreen.hide();
    }, 1000);

    return () => clearTimeout(timer);
  }, []);

  const onBoardingStack = createNativeStackNavigator();
  const onBoarding = () => (
    <onBoardingStack.Navigator screenOptions={{headerShown: false}}>

      <onBoardingStack.Screen name="HomeScreen" component={HomeScreen} />
      <onBoardingStack.Screen name="SignUp" component={SignUp} />
      <onBoardingStack.Screen name="LogIn" component={LogIn} />
      <onBoardingStack.Screen name="ForgetPassword" component={ForgetPassword} />
      <onBoardingStack.Screen name="OTP" component={OtpScreen} />
      <onBoardingStack.Screen name="GeneratePassword" component={GeneratePassword} />
      <onBoardingStack.Screen
        name="RegisterSuccessfull"
        component={RegisterSuccessfull}
      />
      <onBoardingStack.Screen name="ProfileForm" component={ProfileForm} />
      <onBoardingStack.Screen
        name="MerchantProfileForm"
        component={MerchantProfileForm}
      />
     
    </onBoardingStack.Navigator>
  );
  return (
    <Provider store={store}>
      <NavigationContainer>
        <Stack.Navigator screenOptions={{headerShown: false}}>
          {/* <Stack.Screen name="BottomStack" component={BottomStack} /> */}
          <Stack.Screen name="HomeScreen" component={HomeScreen} />
          <Stack.Screen name="SignUp" component={SignUp} />
          <Stack.Screen name="LogIn" component={LogIn} />
          <Stack.Screen name="ForgetPassword" component={ForgetPassword} />
          <Stack.Screen name="OTP" component={OtpScreen} />
          <Stack.Screen name="GeneratePassword" component={GeneratePassword} />
          <Stack.Screen
            name="RegisterSuccessfull"
            component={RegisterSuccessfull}
          />
          <Stack.Screen name="ProfileForm" component={ProfileForm} />
          <Stack.Screen
            name="MerchantProfileForm"
            component={MerchantProfileForm}
          />
          <Stack.Screen name="BottomStack" component={BottomStack} />
        </Stack.Navigator>
      </NavigationContainer>
      <ToastComponent />
    </Provider>
  );
}

export default App;
